# load R
module purge

module load bioinformatics

module load r/gcc/4.3.1

R





# Load necessary libraries
library(DESeq2)
library(tximport)
library(readr)



# List of quant files
quant_files <- c(
    "P1_H.m_1_221020_quant.sf",
    "P1_H.m_19-27_221020_quant.sf",
    "P2-10-17_221020_quant.sf",
    "P2-46-53_221020_quant.sf",
    "P3_37-46_221020_quant.sf",
    "P3_41-49_221020_quant.sf",
    "P1_H.m_15-23_221020_quant.sf",
    "P1_H.m_21-29_221020_quant.sf",
    "P2-11-18_221020_quant.sf",
    "P2-5-11_221020_quant.sf",
    "P3_38-45_221020_quant.sf",
    "P3_42-50_221020_quant.sf",
    "P1_H.m_16-24_221020_quant.sf",
    "P1_H.m_24-32_221020_quant.sf",
    "P2-44-51_221020_quant.sf",
    "P2-6-12_221020_quant.sf",
    "P2-4-10_221020_L002_quant.sf",
    "P3_39-47_221020_quant.sf",
    "P3_43-52_221020_quant.sf",
    "P1_H.m_18-26_221020_quant.sf",
    "P1_H.m_26-34_221020_quant.sf",
    "P2-45-54_221020_quant.sf",
    "P3_36-44_221020_quant.sf",
    "P3_40-48_221020_quant.sf"
)

path_to_files <- ("/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_out_again/all_qaunt_files")

# sample info
sampleinfo <- read_csv("Sampleinfo.csv")

# Read tx2gene.csv
#tx2gene <- readRDS("H.m_tx2gene.RDS")

tx2gene <- readRDS("tx2gene_all.RDS")

# Import transcript-level counts using tximport
txi <- tximport(quant_files, type = "salmon", tx2gene = tx2gene) 


head(txi$counts)





# Create DESeqDataSet
dds <- DESeqDataSetFromTximport(txi, colData = sampleinfo, design = ~ Condition)

# Perform DESeq2 analysis
dds <- DESeq(dds)

dds


head(counts(dds))

boxplot(counts(dds))
vsd <- vst(dds,blind=TRUE)
plotPCA(vsd,intgroup="condition")



#Whereas colData will display the meta data that has been stored with the object.

colData(dds)

# Get differential expression results
res <- results(dds)

dds$condition <- as.factor(dds$condition)

#save the work upto know for downstream analysis
dir.create("Robjects/",showWarnings = FALSE)
saveRDS(dds, file="Robjects/dds.rds")

# look at it
colData(dds)


de_Condition<- DESeq(dds) 

results(de_Condition)

library(dplyr)
 results(de_Condition, tidy=TRUE)

results(de_Condition,tidy=TRUE) %>%
  arrange(padj) %>%  
  head(n=10)


dir.create("de_analysis",showWarnings = FALSE)
 results(de_Condition,tidy=TRUE) %>%
  arrange(padj) %>% 
   write_csv("de_analysis/conditions_DESeq_all.csv")

# Filtering to the differentially-expressed genes can be achieved using the filter function from dplyr.
 results(de_Condition,tidy=TRUE) %>%
  filter(padj < 0.05) %>% 
  write.csv("de_analysis/conditions_filter_DESeq_sig.csv")

# It is also a good idea to save the results object itself so we can re-use later.

saveRDS(de_Condition, file="Robjects/de_Condition.rds")

#Each point on this plot represents and individual gene with the x- and y-axes being the overall expression level and magnitude of difference respectively. 
#Significant genes are automatically highlighted. 
#The fanning effect at low expression levels is often seen due to high relative fold-change at low expression levels.

plotMA(de_Condition)


